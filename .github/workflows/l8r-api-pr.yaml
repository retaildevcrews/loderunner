name: Test LodeRunner.API-PR

on:
  pull_request:
    types: [opened, synchronize]

# LRAPI changes should cause build and test of LRAPI, shared lib, and LRUI

    paths:
      - 'src/LodeRunner.API/Dockerfile'
      - 'src/LodeRunner.API/*.csproj'
      - 'src/LodeRunner.API/src/**.cs'
      - '.github/workflows/l8r-api-pr.yaml'
   

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Docker Build LodeRunner API
      run: |
        docker build ./src -t imageapi -f ./src/LodeRunner.API/Dockerfile

    - name: Set Secrets
      run: |
        mkdir -p /tmp/secrets
        echo -n ${{ secrets.NGSA_DEV_COSMOS_RW_KEY }} >| /tmp/secrets/CosmosKey
        echo -n ${{ secrets.NGSA_DEV_COSMOS_URL }} >| /tmp/secrets/CosmosUrl
        echo -n 'LodeRunner' >| /tmp/secrets/CosmosCollection
        echo -n 'LodeRunnerTestDB' >| /tmp/secrets/CosmosDatabase

    - name: Docker Run and Test LodeRunner API
      run: |

        docker run -d --rm --name loderunnerAPI -p --net=host -v /tmp/secrets:/app/secrets imageapi

        echo "Waiting for LodeRunner API to start ..."

        wait_time=10
        sleep $wait_time

        # wait up to 30 seconds for LodeRunner API to start
        while true
        do
          if curl localhost:8080/version ; then
            echo -e "\n LodeRunner API is running"
            break
          fi
          if [ $wait_time -gt 30 ] ; then
            echo -e "\n timeout waiting for LodeRunner API to start"
            exit 1
          fi

          sleep 1
          ((wait_time=wait_time+1))
        done
    
    - name: Delete Secrets
      run: |
        rm -rf /tmp/secrets

    - name: Run Linter on LodeRunner.UI
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Install npm packages
      run: npm install --prefix ./src/LodeRunner.UI
    - name: Run Linter on ./src/LodeRunner.UI 
      run: npm run lint --prefix ./src/LodeRunner.UI      

    - name: Docker Build LodeRunner.UI
      run: |
        docker build -t loderunnerui ./src/LodeRunner.UI

    - name: Docker Run and Test LodeRunner.UI
      run: |

        docker run --name l8rui -d --rm -p 8080:80 loderunnerui

        echo "Waiting for web server to start ..."
    
        wait_time=10        
        sleep $wait_time
        # wait up to 30 seconds for web server to start
        while true
        do
            if curl localhost:8080 ; then
                echo -e "\n LodeRunner.UI is running"
                break
            fi
            if [ $wait_time -gt 30 ] ; then
              echo -e "\n timeout waiting for LodeRunner-UI to start"
              exit 1
            fi
            
            sleep 1
            ((wait_time=wait_time+1))
        done    

