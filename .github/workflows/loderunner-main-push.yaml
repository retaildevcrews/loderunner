name: Test LodeRunner-Merge

on:
  schedule:
    # Run daily at 6:00 AM UTC
    - cron: "0 6 * * *"

  push:
    branches:
      - main

    paths:  
      # Loderunner source 
      - 'src/LodeRunner/Dockerfile'
      - 'src/LodeRunner/*.csproj'
      - 'src/LodeRunner/src/**.cs'
      - '.github/workflows/loderunner-main-push.yaml'
      - '.github/workflows/loderunner-api.yaml'
      - '.github/workflows/loderunner-ui.yaml'
      - '.github/workflows/loderunner-only.yaml'

      # API source
      - 'src/LodeRunner.API/Dockerfile'
      - 'src/LodeRunner.API/*.csproj'
      - 'src/LodeRunner.API/src/**.cs'

      # Libraries source 
      - 'src/LodeRunner.Core/*.csproj'
      - 'src/LodeRunner.Core/**.cs'
      - 'src/LodeRunner.Data/*.csproj'
      - 'src/LodeRunner.Data/**.cs'
      
      # UI source 
      - 'src/LodeRunner.UI/Dockerfile'
      - 'src/LodeRunner.UI/**.js'
      - 'src/LodeRunner.UI/**.css'
      - 'src/LodeRunner.UI/*.csproj'
      - 'src/LodeRunner.UI/**.cs'
      - 'src/LodeRunner.UI/**.sh'
      - 'src/LodeRunner.UI/**.conf'

      #Autogitops
      - 'autogitops/**'


jobs:
  evaluate-changes:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    
    - name: Check Validation mode 
      id: code_changes
      run: |
          if [[ github.event_name == 'schedule' ]] ; then
            echo "RunAndTestAll=true" >> $GITHUB_ENV
            echo "Build, Run, Test and Push all projects!"
          else
            echo "RunAndTestAll=false" >> $GITHUB_ENV
            echo "Build and push all projects!"
          fi

          URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/commits/${GITHUB_SHA}"
          echo $URL
          FILES=$(curl -s -X GET -G $URL | jq -r '. | .files')
          FILES=$(echo $FILES | jq -r '.[] | .filename')
          echo $FILES

        
    outputs:
      RunAndTestAll: ${{ env.RunAndTestAll }}

  loderunner-only:
    needs: evaluate-changes
    uses: ./.github/workflows/loderunner-only.yaml
    with:
      tag_and_push : true
      run_and_test: ${{ needs.evaluate-changes.outputs.RunAndTestAll == 'true' }}
    secrets:
      cosmos_rw_key: ${{ secrets.NGSA_DEV_COSMOS_RW_KEY }}
      cosmos_url: ${{ secrets.NGSA_DEV_COSMOS_URL }}
      ghcr_id: ${{ secrets.GHCR_ID }}
      ghcr_pat: ${{ secrets.GHCR_PAT }}

  loderunner-api:
    needs: evaluate-changes
    uses: ./.github/workflows/loderunner-api.yaml
    with:
      tag_and_push : true
      run_and_test: ${{ needs.evaluate-changes.outputs.RunAndTestAll == 'true' }}    
    secrets:
      cosmos_rw_key: ${{ secrets.NGSA_DEV_COSMOS_RW_KEY }}
      cosmos_url: ${{ secrets.NGSA_DEV_COSMOS_URL }}
      ghcr_id: ${{ secrets.GHCR_ID }}
      ghcr_pat: ${{ secrets.GHCR_PAT }}

  loderunner-ui:
    needs: evaluate-changes
    uses: ./.github/workflows/loderunner-ui.yaml
    with:
      tag_and_push : true
      run_and_test: ${{ needs.evaluate-changes.outputs.RunAndTestAll == 'true' }}    
    secrets:
      ghcr_id: ${{ secrets.GHCR_ID }}
      ghcr_pat: ${{ secrets.GHCR_PAT }}

  autogitops:
    runs-on: ubuntu-20.04
    needs: [ loderunner-only, loderunner-api, loderunner-ui]
    steps:
    - name: AutoGitOps Pull
      run: |        
        docker pull ghcr.io/bartr/autogitops

    - name: GitOps Deploy
      run: |        
        docker run \
        --name ago \
        --rm \
        -v $(pwd)/autogitops:/ago/autogitops \
        ghcr.io/bartr/autogitops -r /retaildevcrews/ngsa-asb -p ${{ secrets.GHCR_PAT }}

