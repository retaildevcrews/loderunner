name: Build LodeRunner.UI 

on:
  workflow_call:
    inputs:
      tag_and_push:
        description: 'Determines if image will be pushed'
        default: false
        required: true
        type: boolean 
      run_and_test: 
        description: 'Determines if image will be tested.'
        default: false
        required: true
        type: boolean 
    secrets:
      ghcr_id:
        description: 'GHCR_ID used for autogitops deploy'
        required: false
      ghcr_pat:
        description: 'GHCR_PAT used for autogitops deploy'
        required: false

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      DOCKER_REPO: ghcr.io/retaildevcrews/lr-ui

    steps:
    - uses: actions/checkout@v2

    - name: Run Linter on LodeRunner.UI
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Install npm packages
      run: npm install --prefix ./src/LodeRunner.UI

    - name: Run Linter on ./src/LodeRunner.UI 
      run: npm run lint --prefix ./src/LodeRunner.UI      

    - name: Docker Build LodeRunner.UI
      run: |
        docker build ./src/LodeRunner.UI --target nginx-prod -t imageui

    - name: Docker Run and Test LodeRunner.UI
      if: ${{ inputs.run_and_test }}
      run: |

        # LRAPI_DNS here is a dummy variable just to run LRUI
        docker run --name l8rui -d --rm -p 8080:80 -e LRAPI_DNS="http://localhost:9090" imageui 

        echo "Waiting for web server to start ..."
    
        wait_time=10        
        sleep $wait_time
        # wait up to 30 seconds for web server to start
        while true
        do
            if curl localhost:8080 ; then
                echo -e "\n LodeRunner.UI is running"
                break
            fi
            if [ $wait_time -gt 30 ] ; then
              echo -e "\n timeout waiting for LodeRunner-UI to start"
              exit 1
            fi
            
            sleep 1
            ((wait_time=wait_time+1))
        done    
        
    - name: Login to Container Registry
      if: ${{ inputs.tag_and_push }}
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_ID }}  // will need to pass in these values
        password: ${{ secrets.GHCR_PAT }}

    - name: Docker Tag and Push
      if: ${{ inputs.tag_and_push }}
      run: | 
        echo Docker Tag and Push because tag_and_push is- ${{ inputs.tag_and_push }}

        # tag the repo with :beta
        docker tag imageui $DOCKER_REPO:beta

        # Push to the repo
        docker push -a $DOCKER_REPO
