name: Build LodeRunner.API

on:
  workflow_call:
    inputs:
      tag_and_push:
        description: 'Determines if image will be pushed.'
        default: false
        required: true
        type: boolean
      run_and_test: 
        description: 'Determines if image will be tested.'
        default: false
        required: true
        type: boolean        
    secrets:
      cosmos_rw_key:
        required: true
      cosmos_url:
        required: true
      ghcr_id:
        required: true
      ghcr_pat:
        required: true

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      DOCKER_REPO: ghcr.io/retaildevcrews/lr-api

    steps:
    - uses: actions/checkout@v2

    - name: Docker Build LodeRunner API
      run: |
        docker build ./src -t imageapi -f ./src/LodeRunner.API/Dockerfile

    - name: Set Secrets
      if: ${{ inputs.run_and_test }}    
      run: |
        mkdir -p /tmp/secrets
        echo -n ${{ secrets.cosmos_rw_key }} >| /tmp/secrets/CosmosKey
        echo -n ${{ secrets.cosmos_url }} >| /tmp/secrets/CosmosUrl
        echo -n 'LodeRunner' >| /tmp/secrets/CosmosCollection
        echo -n 'LodeRunnerTestDB' >| /tmp/secrets/CosmosDatabase

    - name: Docker Run and Test LodeRunner API
      if: ${{ inputs.run_and_test }}    
      run: |

        docker run -d --rm --name loderunnerAPI --net=host -v /tmp/secrets:/app/secrets imageapi

        echo "Waiting for LodeRunner API to start ..."

        wait_time=10
        sleep $wait_time

        # wait up to 30 seconds for LodeRunner API to start
        while true
        do
          if curl localhost:8080/version ; then
            echo -e "\n LodeRunner API is running"
            break
          fi
          if [ $wait_time -gt 30 ] ; then
            echo -e "\n timeout waiting for LodeRunner API to start"
            exit 1
          fi

          sleep 1
          ((wait_time=wait_time+1))
        done

    - name: Docker Build LodeRunner
      if: ${{ inputs.run_and_test }}
      run: |
        docker build ./src -t image -f ./src/LodeRunner/Dockerfile

    - name: LodeRunner.API Integration Testing
      if: ${{ inputs.run_and_test }}
      run: |
        cd src/LodeRunner.API.Test
        dotnet test --filter "Category=Integration"
        
    - name: Delete Secrets
      if: ${{ inputs.run_and_test }}    
      run: |
        rm -rf /tmp/secrets

    - name: Login to Container Registry
      if: ${{ inputs.tag_and_push }}
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_ID }}  // will need to pass in these values
        password: ${{ secrets.GHCR_PAT }}

    - name: Docker Tag and Push
      if: ${{ inputs.tag_and_push }}
      run: |
        echo Docker Tag and Push because tag_and_push is- ${{ inputs.tag_and_push }}

        #VERSION=$(docker run --rm image --version)

        # tag the repo with :beta
        docker tag imageapi $DOCKER_REPO:beta

        # Push to the repo
        docker push -a $DOCKER_REPO
